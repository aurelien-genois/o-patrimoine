version: "3.9"
services:
  mysql:
    image: mysql:8.0.32
    container_name: ${DOCKER_PROJECT_NAME}_db
    restart: unless-stopped
    ports:
      - 3307:${DB_PORT:-3307}
    expose:
      - ${DB_PORT}
    volumes:
      - mysql-data:/var/lib/mysql:cached
    environment:
        MYSQL_DATABASE: ${DB_NAME}
        # if = root error "Remove MYSQL_USER="root" and use one of the following to control the root user password:"
        MYSQL_USER: ${DB_USER:-smogo}
        MYSQL_PASSWORD: ${DB_PASSWORD:-opatrimoine}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-opatrimoine}
        MYSQL_TCP_PORT: ${DB_PORT:-3307}
        MYSQL_QUERY_CACHE_TYPE: 1
        MYSQL_QUERY_CACHE_SIZE: 64M
        MYSQL_INNODB_BUFFER_POOL_SIZE: 128M
        MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 0
        MYSQL_INNODB_LOG_FILE_SIZE: 64M
        MYSQL_INNODB_BUFFER_POOL_INSTANCES: 4
    networks:
      - opatrimoine-network

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    container_name: ${DOCKER_PROJECT_NAME}_pma
    restart: unless-stopped
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-opatrimoine}
      # PMA_ARBITRARY: 1
      # PMA_USER: ${DB_USER:-smogo}
      # PMA_PASSWORD: ${DB_PASSWORD:-opatrimoine}
      UPLOAD_LIMIT: 20M
    networks:
      - opatrimoine-network

  maildev:
    image: maildev/maildev
    container_name: ${DOCKER_PROJECT_NAME}_maildev
    command: bin/maildev --web 8081 --smtp 1025
    ports:
      - "8081:8081"
      - "1025:1025"
    restart: unless-stopped
    networks:
      - opatrimoine-network

  nginx:
    build:
      context: .docker/nginx
      args:
        - DOCKER_PROJECT_NAME=${DOCKER_PROJECT_NAME}
        - DOCKER_PROJECT_DIR=${DOCKER_PROJECT_DIR}
    container_name: ${DOCKER_PROJECT_NAME}_nginx
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html:cached
      - ./.docker/nginx/certs:/etc/nginx/ssl:cached
      - ./.docker/nginx/error.log:/var/log/nginx/error.log:cached
    networks:
      - opatrimoine-network
      
  php:
    build:
      context: .docker/php
      args:
        - DOCKER_PHP_VERSION=${DOCKER_PHP_VERSION}
        - DOCKER_PHP_EXTENSIONS=${DOCKER_PHP_EXTENSIONS}
        - DOCKER_NODE_VERSION=${DOCKER_NODE_VERSION}
    container_name: ${DOCKER_PROJECT_NAME}_php
    command: sh -c "${DOCKER_START_COMMANDS} && php-fpm"
    tty: true
    depends_on:
      - mysql
      - maildev
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/html:cached
      - vendor:/var/www/html/vendor:delegated
      - ./.docker/php/.zshrc:/root/.zshrc:cached
      - ./.docker/php/.p10k.zsh:/root/.p10k.zsh:cached
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini:cached
      - ${DOCKER_SSH_DIR}:/root/.ssh:cached
    networks:
      - opatrimoine-network

  node:
    image: node:${DOCKER_NODE_VERSION}
    container_name: ${DOCKER_PROJECT_NAME}_node
    volumes:
      - ./:/var/www/html:cached
      - node_modules:/var/www/html/node_modules:delegated
    working_dir: /var/www/html
    user: 1000:1000 # Dans la plupart des cas, adaptez au besoin
    # command: "npm run start"
    tty: true
    ports:
      - 8089:8089 # Port pour webpack
      - 3000:3000 # Port pour BrowserSync
    networks:
      - opatrimoine-network


networks:
  opatrimoine-network:
    driver: bridge

volumes:
  mysql-data:
  certs:
  vendor:
  node_modules:
